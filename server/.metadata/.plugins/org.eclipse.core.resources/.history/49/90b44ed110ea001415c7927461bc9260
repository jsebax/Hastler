package DBServices;

import java.util.List;
import java.util.Optional;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;

import DBconfig.SpringMongoConfig;
import entity.Match;
import entity.Person;
import repositories.MatchRepository;

public class MongoMatchRepository implements MatchRepository {

	public MongoMatchRepository() {
		super();
	}
	
	ApplicationContext ctx = new AnnotationConfigApplicationContext(SpringMongoConfig.class);
	MongoOperations mongoOperation = (MongoOperations) ctx.getBean("mongoTemplate");
	
	@Override
	public void deleteMatch(Match deleted) {
		Query searchMatchQuery = new Query(Criteria.where("id").is(deleted.getId()));
		mongoOperation.remove(searchMatchQuery, Match.class);
	}

	@Override
	public List<Match> findAllMatch() {
		List<Match> listMatch = mongoOperation.findAll(Match.class);
		return listMatch;
	}

	@Override
	public Optional<Match> findOneMatch(String id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Match saveMatch(Match saved) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Match updateMatch(String id, String toUp, Object update) {
		// TODO Auto-generated method stub
		return null;
	}

}
