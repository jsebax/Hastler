package rest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
 




import entity.Person;
import entity.Servi;
import DTO.ServiDTO;
import repository.ServiRepository;

import java.util.List;
import java.util.Optional;

public class MongoDBServiService implements ServiService {
	
	private final ServiRepository repository;
	 
    @Autowired
    MongoDBServiService(ServiRepository repository) {
        this.repository = repository;
    }
 
    @Override
    public ServiDTO create(ServiDTO todo) {
        Servi persisted = new Servi(todo.getTitle(),
        		todo.getDescription(),new Person());
        persisted = repository.save(persisted);
        return convertToDTO(persisted);
    }
 
    @Override
    public TodoDTO delete(String id) {
        Todo deleted = findTodoById(id);
        repository.delete(deleted);
        return convertToDTO(deleted);
    }
 
    @Override
    public List<tododto> findAll() {
        List<todo> todoEntries = repository.findAll();
        return convertToDTOs(todoEntries);
    }
 
    private List<tododto> convertToDTOs(List<todo> models) {
        return models.stream()
                .map(this::convertToDTO)
                .collect(toList());
    }
 
    @Override
    public TodoDTO findById(String id) {
        Todo found = findTodoById(id);
        return convertToDTO(found);
    }
 
    @Override
    public TodoDTO update(TodoDTO todo) {
        Todo updated = findTodoById(todo.getId());
        updated.update(todo.getTitle(), todo.getDescription());
        updated = repository.save(updated);
        return convertToDTO(updated);
    }
 
    private Todo findTodoById(String id) {
        Optional<todo> result = repository.findOne(id);
        return result.orElseThrow(() -> new TodoNotFoundException(id));
 
    }
 
    private TodoDTO convertToDTO(Todo model) {
        TodoDTO dto = new TodoDTO();
 
        dto.setId(model.getId());
        dto.setTitle(model.getTitle());
        dto.setDescription(model.getDescription());
 
        return dto;
    }
}
